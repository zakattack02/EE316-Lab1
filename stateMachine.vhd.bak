library IEEE; 

use IEEE.STD_LOGIC_1164.ALL; 

use IEEE.STD_LOGIC_ARITH.ALL; 

use IEEE.STD_LOGIC_UNSIGNED.ALL; 

 

entity StateMachine is 

    Port ( clk : in STD_LOGIC; 

           rst : in STD_LOGIC; 

           keypad_data : in STD_LOGIC_VECTOR(4 downto 0); 

           data_valid_pulse : in STD_LOGIC; 

           enable  out : std_logic;
			  
			  up   out std_logic); 

end StateMachine; 

 

architecture Behavioral of StateMachine is 

    type State_Type is (INIT, OP_UP_Pause, OP_UP, OP_DOWN, OP_DOWN_Pause, Prog_UP_DATA, Prog_UP_ADDress, Prog_DOWN_DATA, Prog_DOWN_ADDress); 

    signal current_state, next_state : State_Type; 

    signal counter : STD_LOGIC_VECTOR(7 downto 0) := (others => '0'); 

begin 

 

    process(clk, rst) 

    begin 

        if rst = '1' then 

            current_state <= INIT; 

            counter <= (others => '0'); 

        elsif rising_edge(clk) then 

            current_state <= next_state; 

            counter <= counter + 1; 

        end if; 

    end process; 

 

    process(current_state, keypad_data, data_valid_pulse) 

    begin 

        next_state <= current_state; 

 

        case current_state is 

            when INIT =>

                if counter = "11111111" then 

                    next_state <= OP_UP_Pause; 

                    counter <= (others => '0'); 

                end if; 

            when OP_UP_Pause =>
						up <= '1';
						enable <='0';

                if keypad_data = "10000" and data_valid_pulse = '1' then 

                    next_state <= OP_UP; 

                elsif keypad_data = "10001" and data_valid_pulse = '1' then 

                    next_state <= Prog_UP_ADDress; 

                end if; 

            when OP_UP => 
						up <= '1';
						enable <='1';

                if keypad_data = "10000" and data_valid_pulse = '1' then 

                    next_state <= OP_UP_Pause; 

                elsif keypad_data = "10010" and data_valid_pulse = '1' then 

                    next_state <= Prog_UP_ADDress; 

                elsif keypad_data = "10001" and data_valid_pulse = '1' then 

                    next_state <= OP_DOWN; 

                end if; 

            when Prog_UP_ADDress => 

                if keypad_data = "10010" and data_valid_pulse = '1' then 

                    next_state <= OP_UP_Pause; 

                elsif keypad_data = "10010" and data_valid_pulse = '1' then 

                    next_state <= Prog_UP_DATA; 

                end if; 

            when Prog_UP_DATA => 

                if keypad_data = "10010" and data_valid_pulse = '1' then 

                    next_state <= OP_UP_Pause; 

                elsif keypad_data = "10000" and data_valid_pulse = '1' then 

                    next_state <= Prog_UP_ADDress; 

                end if; 

            when OP_DOWN_Pause => 
						up <= '0';
						enable <='0';

                if keypad_data = "10000" and data_valid_pulse = '1' then 

                    next_state <= OP_DOWN; 

                elsif keypad_data = "10001" and data_valid_pulse = '1' then 

                    next_state <= Prog_DOWN_ADDress; 

                end if; 

            when OP_DOWN => 
						up <= '0';
						enable <='1';

                if keypad_data = "10000" and data_valid_pulse = '1' then 

                    next_state <= OP_DOWN_Pause; 

                elsif keypad_data = "10010" and data_valid_pulse = '1' then 

                    next_state <= Prog_DOWN_ADDress; 

                elsif keypad_data = "10001" and data_valid_pulse = '1' then 

                    next_state <= OP_UP; 

                end if; 

            when Prog_DOWN_ADDress => 

                if keypad_data = "10010" and data_valid_pulse = '1' then 

                    next_state <= OP_DOWN_Pause; 

                elsif keypad_data = "10010" and data_valid_pulse = '1' then 

                    next_state <= Prog_DOWN_DATA; 

                end if; 

            when Prog_DOWN_DATA => 

                if keypad_data = "10010" and data_valid_pulse = '1' then 

                    next_state <= OP_DOWN_Pause; 

                elsif keypad_data = "10000" and data_valid_pulse = '1' then 

                    next_state <= Prog_DOWN_ADDress; 

                end if; 

        end case; 

    end process; 

end Behavioral; 
